/*
PROGRAM 3: Box It!
Write an HLA Assembly language program that prompts for a specific int8 value named n and then displays a repeated digit pattern starting with that number. The repeated digit pattern should show all the numbers from 1 up to that number, each on its own row. There should be a total of n 1's on the first row. Then there should be a total of n 2's on the second row and so on all the way up to n. Shown below is a sample program dialogue.

Gimme a decimal value to use as n: 6
111111
222222
333333
444444
555555
666666

Gimme a decimal value to use as n: 4
1111
2222
3333
4444

(Hint: I would recommend you write it first in C or Visual Basic and then translate your lines of code, one-by-one, into a assembly statements, just like our good friend mr. compiler does.)

Rubric
*/

program Assignment8;
#include ("stdlib.hhf");
static
user_in: int8;
to_print: int8;


begin Assignment8;


stdout.put("Gimme a decimal value to use as n: ");
stdin.get(user_in);


mov(user_in, BL);
add(1, BL);


//HIGH-LEVEL EQUIVALENT
//for (int i = 1; i <= n; i++){
//	for (int j = 1; j <= n; j++)
//		cout << i;
//	cout << endl;
//}



//outer loop
OuterForLp:
InitializeOuterForLp: // to_print = 1
mov( 1, to_print );
OuterForLpTerminationTest: // is to_print >= BL? then terminate for
cmp( to_print, BL );
jnl OuterForLpDone; 
OuterForLpBody:

//inner loop
InnerForLp:
InitializeInnerForLp: // BH = 1
mov( 1, BH );
InnerForLpTerminationTest: // is BH >= BL? then terminate for
cmp( BH, BL );
jnl InnerForLpDone;
InnerForLpBody:
stdout.put(to_print);
InnerForLpIncrement:
inc( BH ); 
jmp InnerForLpTerminationTest;
InnerForLpDone:

stdout.newln();
OuterForLpIncrement:
inc( to_print ); 
jmp OuterForLpTerminationTest;
OuterForLpDone:

end Assignment8;